# Python CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install twine
          command: |
            . venv/bin/activate
            pip install twine

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: build wheel
          command: |
            cd ~/repo/YTReviewsAPI
            python3 setup.py bdist bdist_wheel

  release:
    docker:
      - image: circleci/python:3.7.1

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install twine
          command: |
            . venv/bin/activate
            pip install twine

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = porterhunley" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: build wheel
          command: |
            cd ~/repo/YTReviewsAPI
            python3 setup.py bdist bdist_wheel

      - run:
          name: release
          command: |
            . venv/bin/activate
            twine upload ~/repo/YTReviewsAPI/dist/*

      - store_artifacts:
          path: ~/repo/YTReviewsAPI/dist
          destination: youtube-build

workflows:
  version: 2
  build_and_release:
    jobs:
      - build
      - release:
          filters:
            branches:
              only: master

